{"ast":null,"code":"var _jsxFileName = \"/Users/Dascupt/happysing_aws/frontend/src/pages/MindmapPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Mindmap } from '../components/Mindmap';\nimport './Home.css';\n\n// Extend Window interface to include our global API reference\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Ensure global API is not lost on hot reload in development\nif (typeof window !== 'undefined') {\n  if (!window.mindmapApiGlobal) {\n    window.mindmapApiGlobal = null;\n  }\n}\n\n// Create a global variable to store the API\nlet mindmapApi = typeof window !== 'undefined' ? window.mindmapApiGlobal : null;\n\n// Backup function to restore API if main reference is lost\nconst restoreApi = () => {\n  if (typeof window !== 'undefined' && window.mindmapApiGlobal) {\n    mindmapApi = window.mindmapApiGlobal;\n    console.log('Restored mindmapApi from global reference');\n    return true;\n  }\n  return false;\n};\n\n// Export a function to add nodes from anywhere\nexport const addNodeToMindmap = prompt => {\n  console.log('addNodeToMindmap called with:', prompt);\n  if (!mindmapApi && !restoreApi()) {\n    console.log('mindmapApi is not available, storing in localStorage');\n    // If mindmap is not ready, store the node in localStorage\n    const stored = localStorage.getItem('mindmap-pending-nodes');\n    const pending = stored ? JSON.parse(stored) : [];\n    pending.push({\n      prompt,\n      timestamp: Date.now()\n    });\n    localStorage.setItem('mindmap-pending-nodes', JSON.stringify(pending));\n    console.log('Updated pending nodes in localStorage:', pending);\n    return false;\n  }\n  console.log('mindmapApi is available, adding node directly');\n  try {\n    var _mindmapApi;\n    (_mindmapApi = mindmapApi) === null || _mindmapApi === void 0 ? void 0 : _mindmapApi.addExternalNode(prompt);\n    return true;\n  } catch (error) {\n    console.error('Error adding node directly:', error);\n    // Fallback to localStorage if direct addition fails\n    const stored = localStorage.getItem('mindmap-pending-nodes');\n    const pending = stored ? JSON.parse(stored) : [];\n    pending.push({\n      prompt,\n      timestamp: Date.now()\n    });\n    localStorage.setItem('mindmap-pending-nodes', JSON.stringify(pending));\n    console.log('Fallback: Updated pending nodes in localStorage:', pending);\n    return false;\n  }\n};\nconst MindmapPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const state = location.state;\n\n  // Check for pending nodes at component mount\n  useEffect(() => {\n    const stored = localStorage.getItem('mindmap-pending-nodes');\n    if (stored) {\n      console.log('Found pending nodes on MindmapPage mount:', stored);\n    }\n  }, []);\n  const handleBackToProduct = () => {\n    if (state !== null && state !== void 0 && state.productType) {\n      navigate(`/${state.productType}`);\n    } else {\n      navigate('/');\n    }\n  };\n  const handleMindmapReady = useCallback(api => {\n    console.log('Mindmap is ready, storing API reference');\n    mindmapApi = api;\n\n    // Also store in window for persistence across hot reloads\n    if (typeof window !== 'undefined') {\n      window.mindmapApiGlobal = api;\n    }\n\n    // Track which prompts we've processed to avoid duplicates\n    const processedPrompts = new Set();\n\n    // Process initialPrompt from state if available\n    if (state !== null && state !== void 0 && state.initialPrompt) {\n      console.log('Processing initialPrompt from state:', state.initialPrompt);\n      api.addExternalNode(state.initialPrompt);\n      processedPrompts.add(state.initialPrompt);\n    }\n\n    // Process any pending nodes\n    const stored = localStorage.getItem('mindmap-pending-nodes');\n    if (stored) {\n      try {\n        const pending = JSON.parse(stored);\n        console.log('Processing pending nodes:', pending);\n        pending.forEach(node => {\n          // Skip if we've already processed this prompt (including from initialPrompt)\n          if (processedPrompts.has(node.prompt)) {\n            console.log('Skipping duplicate pending node:', node.prompt);\n            return;\n          }\n          console.log('Adding pending node:', node.prompt);\n          api.addExternalNode(node.prompt);\n          processedPrompts.add(node.prompt);\n        });\n        // Clear pending nodes\n        localStorage.removeItem('mindmap-pending-nodes');\n        console.log('Cleared pending nodes from localStorage');\n      } catch (error) {\n        console.error('Error processing pending nodes:', error);\n      }\n    }\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToProduct,\n          className: \"flex items-center text-white hover:text-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5 mr-1\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), \"\\u8FD4\\u56DE\\u7522\\u54C1\\u9801\\u9762\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-[calc(100vh-8rem)]\",\n        children: /*#__PURE__*/_jsxDEV(Mindmap, {\n          initialPrompt: state === null || state === void 0 ? void 0 : state.initialPrompt,\n          onReady: handleMindmapReady\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(MindmapPage, \"LXmWiUh4cOBwsyp+udoFJS8IKfI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = MindmapPage;\nexport default MindmapPage;\nvar _c;\n$RefreshReg$(_c, \"MindmapPage\");","map":{"version":3,"names":["React","useCallback","useEffect","useNavigate","useLocation","Mindmap","jsxDEV","_jsxDEV","window","mindmapApiGlobal","mindmapApi","restoreApi","console","log","addNodeToMindmap","prompt","stored","localStorage","getItem","pending","JSON","parse","push","timestamp","Date","now","setItem","stringify","_mindmapApi","addExternalNode","error","MindmapPage","_s","navigate","location","state","handleBackToProduct","productType","handleMindmapReady","api","processedPrompts","Set","initialPrompt","add","forEach","node","has","removeItem","className","children","onClick","xmlns","viewBox","fill","fillRule","d","clipRule","fileName","_jsxFileName","lineNumber","columnNumber","onReady","_c","$RefreshReg$"],"sources":["/Users/Dascupt/happysing_aws/frontend/src/pages/MindmapPage.tsx"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Mindmap, MindmapApi } from '../components/Mindmap';\nimport './Home.css';\n\n// Extend Window interface to include our global API reference\ndeclare global {\n  interface Window {\n    mindmapApiGlobal: MindmapApi | null;\n  }\n}\n\ninterface LocationState {\n  productType: string;\n  initialPrompt?: string;\n}\n\n// Ensure global API is not lost on hot reload in development\nif (typeof window !== 'undefined') {\n  if (!window.mindmapApiGlobal) {\n    window.mindmapApiGlobal = null;\n  }\n}\n\n// Create a global variable to store the API\nlet mindmapApi: MindmapApi | null = typeof window !== 'undefined' ? window.mindmapApiGlobal : null;\n\n// Backup function to restore API if main reference is lost\nconst restoreApi = () => {\n  if (typeof window !== 'undefined' && window.mindmapApiGlobal) {\n    mindmapApi = window.mindmapApiGlobal;\n    console.log('Restored mindmapApi from global reference');\n    return true;\n  }\n  return false;\n};\n\n// Export a function to add nodes from anywhere\nexport const addNodeToMindmap = (prompt: string) => {\n  console.log('addNodeToMindmap called with:', prompt);\n  \n  if (!mindmapApi && !restoreApi()) {\n    console.log('mindmapApi is not available, storing in localStorage');\n    // If mindmap is not ready, store the node in localStorage\n    const stored = localStorage.getItem('mindmap-pending-nodes');\n    const pending = stored ? JSON.parse(stored) : [];\n    pending.push({\n      prompt,\n      timestamp: Date.now()\n    });\n    localStorage.setItem('mindmap-pending-nodes', JSON.stringify(pending));\n    console.log('Updated pending nodes in localStorage:', pending);\n    return false;\n  }\n  \n  console.log('mindmapApi is available, adding node directly');\n  try {\n    mindmapApi?.addExternalNode(prompt);\n    return true;\n  } catch (error) {\n    console.error('Error adding node directly:', error);\n    // Fallback to localStorage if direct addition fails\n    const stored = localStorage.getItem('mindmap-pending-nodes');\n    const pending = stored ? JSON.parse(stored) : [];\n    pending.push({\n      prompt,\n      timestamp: Date.now()\n    });\n    localStorage.setItem('mindmap-pending-nodes', JSON.stringify(pending));\n    console.log('Fallback: Updated pending nodes in localStorage:', pending);\n    return false;\n  }\n};\n\nconst MindmapPage: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const state = location.state as LocationState;\n\n  // Check for pending nodes at component mount\n  useEffect(() => {\n    const stored = localStorage.getItem('mindmap-pending-nodes');\n    if (stored) {\n      console.log('Found pending nodes on MindmapPage mount:', stored);\n    }\n  }, []);\n\n  const handleBackToProduct = () => {\n    if (state?.productType) {\n      navigate(`/${state.productType}`);\n    } else {\n      navigate('/');\n    }\n  };\n\n  const handleMindmapReady = useCallback((api: MindmapApi) => {\n    console.log('Mindmap is ready, storing API reference');\n    mindmapApi = api;\n    \n    // Also store in window for persistence across hot reloads\n    if (typeof window !== 'undefined') {\n      window.mindmapApiGlobal = api;\n    }\n    \n    // Track which prompts we've processed to avoid duplicates\n    const processedPrompts = new Set<string>();\n    \n    // Process initialPrompt from state if available\n    if (state?.initialPrompt) {\n      console.log('Processing initialPrompt from state:', state.initialPrompt);\n      api.addExternalNode(state.initialPrompt);\n      processedPrompts.add(state.initialPrompt);\n    }\n    \n    // Process any pending nodes\n    const stored = localStorage.getItem('mindmap-pending-nodes');\n    if (stored) {\n      try {\n        const pending = JSON.parse(stored);\n        console.log('Processing pending nodes:', pending);\n        pending.forEach((node: { prompt: string; timestamp: number }) => {\n          // Skip if we've already processed this prompt (including from initialPrompt)\n          if (processedPrompts.has(node.prompt)) {\n            console.log('Skipping duplicate pending node:', node.prompt);\n            return;\n          }\n          \n          console.log('Adding pending node:', node.prompt);\n          api.addExternalNode(node.prompt);\n          processedPrompts.add(node.prompt);\n        });\n        // Clear pending nodes\n        localStorage.removeItem('mindmap-pending-nodes');\n        console.log('Cleared pending nodes from localStorage');\n      } catch (error) {\n        console.error('Error processing pending nodes:', error);\n      }\n    }\n  }, [state]);\n\n  return (\n    <div className=\"home-container\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={handleBackToProduct}\n            className=\"flex items-center text-white hover:text-gray-200\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n            </svg>\n            返回產品頁面\n          </button>\n        </div>\n\n        <div className=\"h-[calc(100vh-8rem)]\">\n          <Mindmap initialPrompt={state?.initialPrompt} onReady={handleMindmapReady} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MindmapPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}